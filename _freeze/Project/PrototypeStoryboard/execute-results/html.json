{
  "hash": "2c1fa52630a8127bdd10a2fee4044b2d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Prototype & Storyboard\"\ndate: 2025-06-22\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  eval: true\n  echo: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1 Storyboard\n\nOur Shiny app is structured and designed to guide users through a different aspect of the Oceanus Folk music genre and Sailor Shift’s career.\n\nIt begins with a tab on the “Profile of Sailor’s Career”, which presents a detailed timeline of Sailor Shift’s rise, showcasing her key career milestones, albums, collaborations etc. This tab includes several network visualisations that enables users to explore Sailor’s connections and influence,\n\nThe second tab, “Influence of Oceanus Folk”, dives into the broader impact of the genre using temporal analyses like bar and line graphs, visualising metrics such as yearly influence spread, Bayesian Surprise and genre entropy over time.\n\nThe third tab, “Oceanus Folk’s Rising Stars”, showcases existing and emerging artists using visual tools such as radar charts, career trajectory plots and data tables ranking artists by their “Star Factor” scores. A linear regression forecast until 2045 is also included to predict the rising stars.\n\n## 1.1 Prototype, Design Concept and User Interface\n\n## 1.1.1 Profile of Sailor’s Career\n\nThe prototypes are illustrated below: ![](Images/Storyboard/Slide1.PNG) ![](Images/Storyboard/Slide2.PNG)\n\n[Design Concept and User Interface]{.underline}\n\n1.  At the top bar, users can navigate across multiple pages to explore Sailor Shift’s career journey and the evolution of the Oceanus Folk genre from various angles.\n\n2.  A user guide is accessible at the top right corner of the dashboard to help users understand the interface and navigate the pages with ease.\n\n3.  Using sidebarLayout(), we create a side panel for feature selection and main panel for plots and explanation. The side panel will include interactive controls such as radio buttons to toggle between node and edge types, and a slider for selecting degrees of separation.\n\n4.  Each tab allows users to take a deeper dive into specific aspects of Sailor Shift’s career, offering multiple perspectives through interactive visuals.\n\n5.  All network visualization should allow interactions such as hover with tooltips to allow users to explore secondary details further.\n\n    -   As the network diagram consist of different nodes and edges which would be coloured differently in a network diagram, we used colours to determine the visual hierarchy: Group non-Oceanus Folk genre together as “Other Genre” to have a single node colour\n\n    -   Group all edges belonging to \"InStyleOf\", \"InterpolatesFrom\", \"CoverOf\", \"LyricalReferenceTo\", \"DirectlySamples\") as \"Influenced By“ to have a single edge colour\n\n    -   \"PerformerOf\", \"ComposerOf\", \"ProducerOf\", \"LyricistOf\", \"RecordedBy\", \"DistributedBy“ as “Creator Of” to have a single edge colour\n\n6.  A data table will be included for users to explore further details where required.\n\n  \n## 1.1.2 Profile of Sailor’s Career\n\n7.  A dual-slider allows users to filter the timeline to observe patterns during specific periods, such as Sailor's debut in 2024 or her breakthrough in 2028.\n\n8.  Users can interact with these visuals by selecting artist names (up to three at a time), genres, and year ranges via dropdowns and sliders.\n\nThis project aims to build interactive visualisation tools that allow journalist Silas Reed and his readers to explore and uncover meaningful insights into Sailor Shift’s career and the influence of Oceanus Folk on the global music scene. The key objectives are as follows.\n\n# Data\n\nThis project explores the dataset provided by [VAST Challenge 2025 Mini-Challenge 1](https://vast-challenge.github.io/2025/MC1.html). It is a comprehensive knowledge graph capturing the landscape of the the music industry. The graph consist of 17,412 nodes and 37,857 edges, organised into 17 connected components.\n\nEach node represents a person, song, record label, album, or musical group. The edges represent the relationships between connected nodes, as defined below.\n\n| Edge Type | Source Node(s) | Destination Node(s) | Description |\n|------------------|------------------|------------------|------------------|\n| PerformerOf | Person, MusicalGroup | Song, Album | Source performed the destination. |\n| ComposerOf | Person | Song, Album | Source composed the destination. |\n| ProducerOf | Person, RecordLabel | Song, Album, Person, MusicalGroup | Source participated in the production of the destination's work. |\n| LyricistOf | Person | Song, Album | Source wrote lyrics for the destination. |\n| RecordedBy | Song, Album | RecordLabel | Destination aided in the recording process for the source. |\n| DistributedBy | Song, Album | RecordLabel | Destination aided in the distribution process for the source. |\n| InStyleOf | Song, Album | Song, Album, Person, MusicalGroup | Source was performed at least partly in the style of the destination. |\n| InterpolatesFrom | Song, Album | Song, Album | Source interpolated a melody from the destination. |\n| CoverOf | Song, Album | Song, Album | Source is a cover of the destination. |\n| LyricalReferenceTo | Song, Album | Song, Album | Source makes a lyrical reference to the destination. |\n| DirectlySamples | Song, Album | Song, Album | Source directly reuses a portion of the destination's audio via sampling. |\n| MemberOf | Person | MusicalGroup | Source is (or was) a member of the destination. |\n\n# Methodology\n\nDownload the libraries (if required) before loading the packages:\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: panel-tabset\n## Diagram\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngrViz(\"\ndigraph flowchart {\n  graph [layout = dot, rankdir = TB, fontname = 'Helvetica', fontsize = 12]\n  \n  # Global node settings\n  node [shape = box, style = filled, fontname = 'Helvetica']\n  \n  # Input nodes\n  input [label = 'MC1_graph.json', fillcolor = '#FFE4B5', color = '#FFA500', penwidth = 1.5]\n  read [label = 'Read input', fillcolor = '#E6E6FA', color = '#9370DB']\n  clean [label = 'Data Pre-processing', fillcolor = '#E6E6FA', color = '#9370DB']\n  \n  # Visualization nodes\n  plot_net [label = 'Plot network graphs', fillcolor = '#ADD8E6', color = '#4682B4']\n  plot_bar [label = 'Plot barchart', fillcolor = '#98FB98', color = '#2E8B57']\n  plot_line [label = 'Plot line chart', fillcolor = '#98FB98', color = '#2E8B57']\n  \n  # Analysis nodes\n  bayesian [label = 'Bayesian Surprise', fillcolor = '#FFDAB9', color = '#CD853F']\n  entropy [label = 'Genre Entropy', fillcolor = '#FFDAB9', color = '#CD853F']\n  \n  # Output node\n  shiny [label = 'Shiny App', fillcolor = '#FFB6C1', color = '#FF69B4', shape = ellipse, style = 'filled,rounded']\n  \n  # Edges\n  input -> read -> clean\n  clean -> plot_net [color = '#4682B4']\n  clean -> plot_bar [color = '#2E8B57']\n  clean -> plot_line [color = '#2E8B57']\n  clean -> bayesian [color = '#CD853F']\n  clean -> entropy [color = '#CD853F']\n  bayesian -> plot_line [color = '#CD853F']\n  entropy -> plot_line [color = '#CD853F']\n  plot_net -> shiny [color = '#4682B4']\n  plot_bar -> shiny [color = '#2E8B57']\n  plot_line -> shiny [color = '#2E8B57']\n  \n  # Main subgraph for Data Exploration and Visualisation\n  subgraph cluster_explore {\n    label = <Data Exploration and Visualisation>\n    labelloc = t\n    labeljust = c\n    style = filled\n    fillcolor = '#F5F5F5'\n    color = '#696969'\n    margin = 20\n    fontname = 'Helvetica-Bold'\n    fontsize = 14\n    \n    # Statisical Analysis\n    subgraph cluster_statistics {\n      label = <Statistical Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#FFF8DC'\n      color = '#DAA520'\n      margin = 15\n      fontsize = 12\n      bayesian\n      entropy\n    }\n    \n    # Temporal Analysis subgroup\n    subgraph cluster_temporal {\n      label = <Temporal Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#F0FFF0'\n      color = '#228B22'\n      margin = 15\n      fontsize = 12\n      plot_bar\n      plot_line\n    }\n    \n    # Influence Analysis subgroup\n    subgraph cluster_influence {\n      label = <Influence Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#F0F8FF'\n      color = '#4169E1'\n      margin = 15\n      fontsize = 12\n      plot_net\n    }\n    \n    shiny\n  }\n}\n\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"grViz html-widget html-fill-item\" id=\"htmlwidget-afd7a21d8d7d655a4ff9\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-afd7a21d8d7d655a4ff9\">{\"x\":{\"diagram\":\"\\ndigraph flowchart {\\n  graph [layout = dot, rankdir = TB, fontname = \\\"Helvetica\\\", fontsize = 12]\\n  \\n  # Global node settings\\n  node [shape = box, style = filled, fontname = \\\"Helvetica\\\"]\\n  \\n  # Input nodes\\n  input [label = \\\"MC1_graph.json\\\", fillcolor = \\\"#FFE4B5\\\", color = \\\"#FFA500\\\", penwidth = 1.5]\\n  read [label = \\\"Read input\\\", fillcolor = \\\"#E6E6FA\\\", color = \\\"#9370DB\\\"]\\n  clean [label = \\\"Data Pre-processing\\\", fillcolor = \\\"#E6E6FA\\\", color = \\\"#9370DB\\\"]\\n  \\n  # Visualization nodes\\n  plot_net [label = \\\"Plot network graphs\\\", fillcolor = \\\"#ADD8E6\\\", color = \\\"#4682B4\\\"]\\n  plot_bar [label = \\\"Plot barchart\\\", fillcolor = \\\"#98FB98\\\", color = \\\"#2E8B57\\\"]\\n  plot_line [label = \\\"Plot line chart\\\", fillcolor = \\\"#98FB98\\\", color = \\\"#2E8B57\\\"]\\n  \\n  # Analysis nodes\\n  bayesian [label = \\\"Bayesian Surprise\\\", fillcolor = \\\"#FFDAB9\\\", color = \\\"#CD853F\\\"]\\n  entropy [label = \\\"Genre Entropy\\\", fillcolor = \\\"#FFDAB9\\\", color = \\\"#CD853F\\\"]\\n  \\n  # Output node\\n  shiny [label = \\\"Shiny App\\\", fillcolor = \\\"#FFB6C1\\\", color = \\\"#FF69B4\\\", shape = ellipse, style = \\\"filled,rounded\\\"]\\n  \\n  # Edges\\n  input -> read -> clean\\n  clean -> plot_net [color = \\\"#4682B4\\\"]\\n  clean -> plot_bar [color = \\\"#2E8B57\\\"]\\n  clean -> plot_line [color = \\\"#2E8B57\\\"]\\n  clean -> bayesian [color = \\\"#CD853F\\\"]\\n  clean -> entropy [color = \\\"#CD853F\\\"]\\n  bayesian -> plot_line [color = \\\"#CD853F\\\"]\\n  entropy -> plot_line [color = \\\"#CD853F\\\"]\\n  plot_net -> shiny [color = \\\"#4682B4\\\"]\\n  plot_bar -> shiny [color = \\\"#2E8B57\\\"]\\n  plot_line -> shiny [color = \\\"#2E8B57\\\"]\\n  \\n  # Main subgraph for Data Exploration and Visualisation\\n  subgraph cluster_explore {\\n    label = <Data Exploration and Visualisation>\\n    labelloc = t\\n    labeljust = c\\n    style = filled\\n    fillcolor = \\\"#F5F5F5\\\"\\n    color = \\\"#696969\\\"\\n    margin = 20\\n    fontname = \\\"Helvetica-Bold\\\"\\n    fontsize = 14\\n    \\n    # Statisical Analysis\\n    subgraph cluster_statistics {\\n      label = <Statistical Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#FFF8DC\\\"\\n      color = \\\"#DAA520\\\"\\n      margin = 15\\n      fontsize = 12\\n      bayesian\\n      entropy\\n    }\\n    \\n    # Temporal Analysis subgroup\\n    subgraph cluster_temporal {\\n      label = <Temporal Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#F0FFF0\\\"\\n      color = \\\"#228B22\\\"\\n      margin = 15\\n      fontsize = 12\\n      plot_bar\\n      plot_line\\n    }\\n    \\n    # Influence Analysis subgroup\\n    subgraph cluster_influence {\\n      label = <Influence Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#F0F8FF\\\"\\n      color = \\\"#4169E1\\\"\\n      margin = 15\\n      fontsize = 12\\n      plot_net\\n    }\\n    \\n    shiny\\n  }\\n}\\n\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/viz-1.8.2/viz.js\"></script>\n<link href=\"../site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/grViz-binding-1.0.11/grViz.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}