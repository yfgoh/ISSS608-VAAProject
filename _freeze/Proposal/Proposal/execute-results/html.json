{
  "hash": "f01246203ec18c8c974e32068721850c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Project Proposal\"\nformat: html\nfreeze: true\nwarning: false\ndate: \"June 6, 2025\"\n---\n\n\n\n# Motivation\n\nThe story of Sailor Shift is more than a tale of individual stardom — it is a reflection of how local culture, through music, can resonate on a global scale. Her rise from a small island nation to the forefront of the international music scene not only brought worldwide recognition to Oceanus Folk but also reshaped the genre itself. Sailor’s rising popularity led to greater interest in the genre’s roots, its collaborators, and its influence across musical styles.\n\nThis project is motivated by the opportunity to explore that transformation through data. By visualising the rich network of artistic relationships, genre influences, and temporal trends captured in a comprehensive knowledge graph, we aim to illustrate the pivotal role Sailor Shift has played as a prominent ambassador of Oceanus Folk. In collaboration with journalist Silas Reed, we seek to create meaningful visualisations that reveal the deeper story behind Sailor’s success, trace the evolution of Oceanus Folk, and uncover new and compelling insights along the way.\n\n# Objectives\n\nThis project aims to build interactive visualisation tools that allow journalist Silas Reed and his readers to explore and uncover meaningful insights into Sailor Shift’s career and the influence of Oceanus Folk on the global music scene. The key objectives are as follows.\n\n1.  **Understand the Profile of Sailor Shift’s Career**\n\n    Visualisations will trace Sailor’s artistic journey, highlighting who has influenced her over time, her key collaborators, and the individuals she has directly or indirectly influenced. It will also explore how she has impacted members of the broader Oceanus Folk community.\n\n2.  **Examine the Spread and Evolution of Oceanus Folk**\n\n    The tools will map how Oceanus Folk has spread through the musical world by identifying whether its influence has been intermittent or gradual, pinpointing the most influenced genres and artists, and showing how the genre itself has evolved, especially through Sailor’s influence and cross-genre inspiration.\n\n3.  **Develop a Profile of a Rising Star in the Music Industry**\n\n    By visualising and comparing the career trajectories of three artists, the project will uncover key patterns in how an artist's influence evolve as he/she gains popularity. These patterns will then guide data-driven predictions about the next generation of Oceanus Folk artists expected to rise in the coming five years.\n\n# Data\n\nThis project explores the dataset provided by [VAST Challenge 2025 Mini-Challenge 1](https://vast-challenge.github.io/2025/MC1.html). It is a comprehensive knowledge graph capturing the landscape of the the music industry. The graph consist of 17,412 nodes and 37,857 edges, organised into 17 connected components.\n\nEach node represents a person, song, record label, album, or musical group. The edges represent the relationships between connected nodes, as defined below.\n\n| Edge Type | Source Node(s) | Destination Node(s) | Description |\n|------------------|------------------|------------------|-------------------|\n| PerformerOf | Person, MusicalGroup | Song, Album | Source performed the destination. |\n| ComposerOf | Person | Song, Album | Source composed the destination. |\n| ProducerOf | Person, RecordLabel | Song, Album, Person, MusicalGroup | Source participated in the production of the destination's work. |\n| LyricistOf | Person | Song, Album | Source wrote lyrics for the destination. |\n| RecordedBy | Song, Album | RecordLabel | Destination aided in the recording process for the source. |\n| DistributedBy | Song, Album | RecordLabel | Destination aided in the distribution process for the source. |\n| InStyleOf | Song, Album | Song, Album, Person, MusicalGroup | Source was performed at least partly in the style of the destination. |\n| InterpolatesFrom | Song, Album | Song, Album | Source interpolated a melody from the destination. |\n| CoverOf | Song, Album | Song, Album | Source is a cover of the destination. |\n| LyricalReferenceTo | Song, Album | Song, Album | Source makes a lyrical reference to the destination. |\n| DirectlySamples | Song, Album | Song, Album | Source directly reuses a portion of the destination's audio via sampling. |\n| MemberOf | Person | MusicalGroup | Source is (or was) a member of the destination. |\n\n# Methodology\n\nDownload the library for DiagrammeR before loading the packages.\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: panel-tabset\n## Diagram\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\ngrViz(\"\ndigraph flowchart {\n  graph [layout = dot, rankdir = TB, fontname = 'Helvetica', fontsize = 12]\n  \n  # Global node settings\n  node [shape = box, style = filled, fontname = 'Helvetica']\n  \n  # Input nodes\n  input [label = 'MC1_graph.json', fillcolor = '#FFE4B5', color = '#FFA500', penwidth = 1.5]\n  read [label = 'Read input', fillcolor = '#E6E6FA', color = '#9370DB']\n  clean [label = 'Data Pre-processing', fillcolor = '#E6E6FA', color = '#9370DB']\n  \n  # Visualization nodes\n  plot_net [label = 'Plot network graphs', fillcolor = '#ADD8E6', color = '#4682B4']\n  plot_bar [label = 'Plot barchart', fillcolor = '#98FB98', color = '#2E8B57']\n  plot_line [label = 'Plot line chart', fillcolor = '#98FB98', color = '#2E8B57']\n  \n  # Analysis nodes\n  bayesian [label = 'Bayesian Surprise', fillcolor = '#FFDAB9', color = '#CD853F']\n  entropy [label = 'Genre Entropy', fillcolor = '#FFDAB9', color = '#CD853F']\n  \n  # Output node\n  shiny [label = 'Shiny App', fillcolor = '#FFB6C1', color = '#FF69B4', shape = ellipse, style = 'filled,rounded']\n  \n  # Edges\n  input -> read -> clean\n  clean -> plot_net [color = '#4682B4']\n  clean -> plot_bar [color = '#2E8B57']\n  clean -> plot_line [color = '#2E8B57']\n  clean -> bayesian [color = '#CD853F']\n  clean -> entropy [color = '#CD853F']\n  bayesian -> plot_line [color = '#CD853F']\n  entropy -> plot_line [color = '#CD853F']\n  plot_net -> shiny [color = '#4682B4']\n  plot_bar -> shiny [color = '#2E8B57']\n  plot_line -> shiny [color = '#2E8B57']\n  \n  # Main subgraph for Data Exploration and Visualisation\n  subgraph cluster_explore {\n    label = <Data Exploration and Visualisation>\n    labelloc = t\n    labeljust = c\n    style = filled\n    fillcolor = '#F5F5F5'\n    color = '#696969'\n    margin = 20\n    fontname = 'Helvetica-Bold'\n    fontsize = 14\n    \n    # Statisical Analysis\n    subgraph cluster_statistics {\n      label = <Statistical Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#FFF8DC'\n      color = '#DAA520'\n      margin = 15\n      fontsize = 12\n      bayesian\n      entropy\n    }\n    \n    # Temporal Analysis subgroup\n    subgraph cluster_temporal {\n      label = <Temporal Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#F0FFF0'\n      color = '#228B22'\n      margin = 15\n      fontsize = 12\n      plot_bar\n      plot_line\n    }\n    \n    # Influence Analysis subgroup\n    subgraph cluster_influence {\n      label = <Influence Analysis>\n      labelloc = t\n      labeljust = c\n      style = filled\n      fillcolor = '#F0F8FF'\n      color = '#4169E1'\n      margin = 15\n      fontsize = 12\n      plot_net\n    }\n    \n    shiny\n  }\n}\n\")\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"grViz html-widget html-fill-item\" id=\"htmlwidget-0e5e9e7ae4406713ebb3\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0e5e9e7ae4406713ebb3\">{\"x\":{\"diagram\":\"\\ndigraph flowchart {\\n  graph [layout = dot, rankdir = TB, fontname = \\\"Helvetica\\\", fontsize = 12]\\n  \\n  # Global node settings\\n  node [shape = box, style = filled, fontname = \\\"Helvetica\\\"]\\n  \\n  # Input nodes\\n  input [label = \\\"MC1_graph.json\\\", fillcolor = \\\"#FFE4B5\\\", color = \\\"#FFA500\\\", penwidth = 1.5]\\n  read [label = \\\"Read input\\\", fillcolor = \\\"#E6E6FA\\\", color = \\\"#9370DB\\\"]\\n  clean [label = \\\"Data Pre-processing\\\", fillcolor = \\\"#E6E6FA\\\", color = \\\"#9370DB\\\"]\\n  \\n  # Visualization nodes\\n  plot_net [label = \\\"Plot network graphs\\\", fillcolor = \\\"#ADD8E6\\\", color = \\\"#4682B4\\\"]\\n  plot_bar [label = \\\"Plot barchart\\\", fillcolor = \\\"#98FB98\\\", color = \\\"#2E8B57\\\"]\\n  plot_line [label = \\\"Plot line chart\\\", fillcolor = \\\"#98FB98\\\", color = \\\"#2E8B57\\\"]\\n  \\n  # Analysis nodes\\n  bayesian [label = \\\"Bayesian Surprise\\\", fillcolor = \\\"#FFDAB9\\\", color = \\\"#CD853F\\\"]\\n  entropy [label = \\\"Genre Entropy\\\", fillcolor = \\\"#FFDAB9\\\", color = \\\"#CD853F\\\"]\\n  \\n  # Output node\\n  shiny [label = \\\"Shiny App\\\", fillcolor = \\\"#FFB6C1\\\", color = \\\"#FF69B4\\\", shape = ellipse, style = \\\"filled,rounded\\\"]\\n  \\n  # Edges\\n  input -> read -> clean\\n  clean -> plot_net [color = \\\"#4682B4\\\"]\\n  clean -> plot_bar [color = \\\"#2E8B57\\\"]\\n  clean -> plot_line [color = \\\"#2E8B57\\\"]\\n  clean -> bayesian [color = \\\"#CD853F\\\"]\\n  clean -> entropy [color = \\\"#CD853F\\\"]\\n  bayesian -> plot_line [color = \\\"#CD853F\\\"]\\n  entropy -> plot_line [color = \\\"#CD853F\\\"]\\n  plot_net -> shiny [color = \\\"#4682B4\\\"]\\n  plot_bar -> shiny [color = \\\"#2E8B57\\\"]\\n  plot_line -> shiny [color = \\\"#2E8B57\\\"]\\n  \\n  # Main subgraph for Data Exploration and Visualisation\\n  subgraph cluster_explore {\\n    label = <Data Exploration and Visualisation>\\n    labelloc = t\\n    labeljust = c\\n    style = filled\\n    fillcolor = \\\"#F5F5F5\\\"\\n    color = \\\"#696969\\\"\\n    margin = 20\\n    fontname = \\\"Helvetica-Bold\\\"\\n    fontsize = 14\\n    \\n    # Statisical Analysis\\n    subgraph cluster_statistics {\\n      label = <Statistical Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#FFF8DC\\\"\\n      color = \\\"#DAA520\\\"\\n      margin = 15\\n      fontsize = 12\\n      bayesian\\n      entropy\\n    }\\n    \\n    # Temporal Analysis subgroup\\n    subgraph cluster_temporal {\\n      label = <Temporal Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#F0FFF0\\\"\\n      color = \\\"#228B22\\\"\\n      margin = 15\\n      fontsize = 12\\n      plot_bar\\n      plot_line\\n    }\\n    \\n    # Influence Analysis subgroup\\n    subgraph cluster_influence {\\n      label = <Influence Analysis>\\n      labelloc = t\\n      labeljust = c\\n      style = filled\\n      fillcolor = \\\"#F0F8FF\\\"\\n      color = \\\"#4169E1\\\"\\n      margin = 15\\n      fontsize = 12\\n      plot_net\\n    }\\n    \\n    shiny\\n  }\\n}\\n\",\"config\":{\"engine\":\"dot\",\"options\":null}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## Explanation\n\n1.  **Data Pre-processing**: Ensure data integrity prior to analysis.\n\n    -   **Validation of Node and Edge integrity**: Check and remove any missing or duplicate nodes and edges to ensure a consistent and accurate representation of the network.\n\n    -   **Schema compliance**: Verify all edges against the predefined schema to confirm that source and destination node types were correctly aligned with their corresponding edge types. Any incorrect edge and nodes identified will be removed.\n\n    -   **Data Enhancement**: Creation of additional columns to facilitate analysis.\n\n    -   **Column Standardisation**: Column names will be renamed and formatted to support the creation of network graph.\n\n2.  **Data Exploration and Visualisation**\n\n    -   With reference to relevant literature in musicology, network science and cultural analysis, the following statistical measures will be applied.\n\n        -   **Bayesian Surprise**: To quantify whether influence had occurred gradually over time or emerged in bursts.\n\n        -   **Genre Entropy**: To measure diversity of genres associated with each artist or production, providing insights into stylistic concentration or crossover influence.\n\n    -   Visualisations will play a central role in pattern recognition and deriving insights.\n\n        -   **Interactive Network Graphs** will be used to explore artistic relationships, genre influences, and collaboration patterns, helping to identify key players across the musical landscape.\n\n        -   **Bar and Line Charts** will illustrate influence and releases over time, highlighting pivotal moments in Sailor Shift’s career and the broader evolution of Oceanus Folk.\n\n        -   **User-Driven Exploration** will be enabled through a Shiny app, allowing Silas Reed and readers to interact with the network, adjust filters, and uncover insights based on their interests.\n:::\n\n# Shiny Prototype Sketches \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Proposal_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n# R Packages\n\n::: {.panel-tabset}\n\n### Data Manipulation and Project Reporting\n\n- **`tidyverse`**: R packages for data science workflows.\n- **`dplyr`**: Data manipulation using grammar of data (e.g., `filter()`, `summarise()`).\n- **`stringr`**: String operations with simplified syntax.\n- **`lubridate`**: Easy handling of dates and times.\n- **`jsonlite`**: Read and write JSON data.\n- **`knitr`**: Generates documents that uses both R code and markdown.\n\n### Data Visualization\n\n- **`ggplot2`**: Grammar of Graphics framework for plotting.\n- **`ggtext`**: Adds markdown/HTML text support to ggplot.\n- **`patchwork`**: Combine multiple ggplots in grid layouts.\n- **`ggnewscale`**: Enables multiple `fill` or `colour` scales in the same plot.\n- **`scales`**: Control axis breaks, labels (e.g. percentages, currency).\n\n### Interactive and Web\n\n- **`shiny`**: Build interactive web applications in R.\n- **`ggiraph`**: Adds interactivity (e.g. hover, tooltips) to ggplot visualisations.\n\n### Network and Graph Analysis\n\n- **`igraph`**: Graph package for network.\n- **`tidygraph`**: Tidy interface for working with graphs based on `dplyr`.\n- **`ggraph`**: ggplot2-based framework for visualising graphs and networks.\n\n:::\n\n# Project Schedule\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(forcats)\nlibrary(ggplot2)\nlibrary(lubridate)\n\ntask_data <- data.frame(\n  id = 1:7,\n  content = c(\"Initial Project Discussion\", \n              \"Data Pre-processing and Exploratory Data Analysis\", \n              \"Project Proposal\", \n              \"Data Visualisations and Findings\", \n              \"Shiny App\", \n              \"Poster\", \n              \"Final Submission\"),\n  start = as.Date(c(\"2025-05-10\", \"2025-05-18\", \"2025-06-01\", \"2025-06-01\", \"2025-06-08\", \"2025-06-15\", \"2025-06-27\")),\n  end   = as.Date(c(\"2025-05-17\", \"2025-05-31\", \"2025-06-08\", \"2025-06-10\", \"2025-06-14\", \"2025-06-26\", \"2025-07-06\"))\n)\n\ntask_data <- task_data %>%\n  arrange(start) %>%\n  mutate(content = factor(content, levels = content))\n\n# Plot\nggplot(task_data, aes(x = start, xend = end, y = content, yend = content)) +\n  geom_segment(size = 8, color = \"steelblue\") +\n  scale_x_date(\n    date_breaks = \"1 week\",\n    date_labels = \"%b %d\"\n  ) +\n  labs(\n    title = \"Project Schedule (Gantt Chart)\",\n    x = \"Date\", y = \"Task\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))\n```\n\n::: {.cell-output-display}\n![](Proposal_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::",
    "supporting": [
      "Proposal_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../site_libs/viz-1.8.2/viz.js\"></script>\n<link href=\"../site_libs/DiagrammeR-styles-0.2/styles.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/grViz-binding-1.0.11/grViz.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}